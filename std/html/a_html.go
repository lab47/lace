// This file is generated by generate-std.clj script. Do not edit manually!

package html

import (
	. "github.com/lab47/lace/core"
	"html"
)


var __escape__P ProcFn = __escape_
var escape_ Proc = Proc{Fn: __escape__P, Name: "escape_", Package: "std/html"}

func __escape_(_env *Env, _args []Object) (Object, error) {
	_c := len(_args)
	switch {
	case _c == 1:
		var err error
		s, err := ExtractString(_env, _args, 0); if err != nil { return nil, err }
		_res, err := html.EscapeString(s), nil
		return MakeString(_res), err

	default:
		return nil, ErrorArity(_env, _c)
	}
}

var __unescape__P ProcFn = __unescape_
var unescape_ Proc = Proc{Fn: __unescape__P, Name: "unescape_", Package: "std/html"}

func __unescape_(_env *Env, _args []Object) (Object, error) {
	_c := len(_args)
	switch {
	case _c == 1:
		var err error
		s, err := ExtractString(_env, _args, 0); if err != nil { return nil, err }
		_res, err := html.UnescapeString(s), nil
		return MakeString(_res), err

	default:
		return nil, ErrorArity(_env, _c)
	}
}

func Init(env *Env, ns *Namespace) {

	InternsOrThunks(env, ns)
}

func init() {
	AddNativeNamespace("html", func(env *Env) error {
		ns := env.EnsureNamespace(MakeSymbol("lace.html"))
		Init(env, ns)
		return nil
	})
}
