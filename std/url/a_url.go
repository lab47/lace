// This file is generated by generate-std.joke script. Do not edit manually!

package url

import (
	"net/url"

	. "github.com/lab47/lace/core"
)

var __path_escape__P ProcFn = __path_escape_
var path_escape_ Proc = Proc{Fn: __path_escape__P, Name: "path_escape_", Package: "std/url"}

func __path_escape_(_env *Env, _args []Object) (Object, error) {
	_c := len(_args)
	switch {
	case _c == 1:
		var err error
		s, err := ExtractString(_env, _args, 0)
		if err != nil {
			return nil, err
		}
		_res, err := url.PathEscape(s), nil
		return MakeString(_res), err

	default:
		return nil, ErrorArity(_env, _c)
	}
}

var __path_unescape__P ProcFn = __path_unescape_
var path_unescape_ Proc = Proc{Fn: __path_unescape__P, Name: "path_unescape_", Package: "std/url"}

func __path_unescape_(_env *Env, _args []Object) (Object, error) {
	_c := len(_args)
	switch {
	case _c == 1:
		var err error
		s, err := ExtractString(_env, _args, 0)
		if err != nil {
			return nil, err
		}
		_res, err := pathUnescape(s)
		return MakeString(_res), err

	default:
		return nil, ErrorArity(_env, _c)
	}
}

var __query_escape__P ProcFn = __query_escape_
var query_escape_ Proc = Proc{Fn: __query_escape__P, Name: "query_escape_", Package: "std/url"}

func __query_escape_(_env *Env, _args []Object) (Object, error) {
	_c := len(_args)
	switch {
	case _c == 1:
		var err error
		s, err := ExtractString(_env, _args, 0)
		if err != nil {
			return nil, err
		}
		_res, err := url.QueryEscape(s), nil
		return MakeString(_res), err

	default:
		return nil, ErrorArity(_env, _c)
	}
}

var __query_unescape__P ProcFn = __query_unescape_
var query_unescape_ Proc = Proc{Fn: __query_unescape__P, Name: "query_unescape_", Package: "std/url"}

func __query_unescape_(_env *Env, _args []Object) (Object, error) {
	_c := len(_args)
	switch {
	case _c == 1:
		var err error
		s, err := ExtractString(_env, _args, 0)
		if err != nil {
			return nil, err
		}
		_res, err := queryUnescape(s)
		return MakeString(_res), err

	default:
		return nil, ErrorArity(_env, _c)
	}
}

func Init() {

	InternsOrThunks()
}

var urlNamespace = GLOBAL_ENV.EnsureNamespace(MakeSymbol("joker.url"))

func init() {
	urlNamespace.Lazy = Init
}
